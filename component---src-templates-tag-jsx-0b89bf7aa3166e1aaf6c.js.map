{"version":3,"sources":["webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/templates/tag.jsx"],"names":["PostListing","getPostList","postList","this","props","postEdges","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","title","date","excerpt","timeToRead","render","map","post","to","key","React","Component","TagTemplate","tag","pageContext","data","allMarkdownRemark","edges","className","config","siteTitle"],"mappings":"8IAGMA,E,0GACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXAC,KAAKC,MAAMC,UAAUC,SAAQ,SAAAC,GAC3BL,EAASM,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCC,MAAOT,EAASG,KAAKI,YAAYE,MACjCC,KAAMV,EAASG,KAAKC,OAAOM,KAC3BC,QAASX,EAASG,KAAKQ,QACvBC,WAAYZ,EAASG,KAAKS,gBAGvBjB,G,EAETkB,OAAA,WACE,IAAMlB,EAAWC,KAAKF,cACtB,OACE,6BAEEC,EAASmB,KAAI,SAAAC,GAAI,OACf,kBAAC,OAAD,CAAMC,GAAID,EAAKb,KAAMe,IAAKF,EAAKN,OAC7B,4BAAKM,EAAKN,a,GAvBIS,IAAMC,WA+BjB1B,O,wLC3BM2B,E,kGACnBP,OAAA,WACE,IAAQQ,EAAQzB,KAAKC,MAAMyB,YAAnBD,IACFvB,EAAYF,KAAKC,MAAM0B,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CAAQjB,MAAK,oBAAsBY,EAAtB,OAAgCM,IAAOC,YACpD,kBAAC,IAAD,CAAa9B,UAAWA,O,GAROoB,IAAMC","file":"component---src-templates-tag-jsx-0b89bf7aa3166e1aaf6c.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <Link to={post.path} key={post.title}>\r\n            <h2>{post.title}</h2>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class TagTemplate extends React.Component {\r\n  render() {\r\n    const { tag } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout>\r\n        <div className=\"tag-container\">\r\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}