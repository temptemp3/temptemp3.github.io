{"componentChunkName":"component---src-templates-post-jsx","path":"/bash-declare","result":{"data":{"markdownRemark":{"html":"<p>Most programmers can get by without knowing about declare in bash. Good thing we aren't most programmers. The leverage you get out of using declare and variable attributes is huge. It goes way beyond creating arrays and integer variables.</p>\n<h2 id=\"using-declare\" style=\"position:relative;\"><a href=\"#using-declare\" aria-label=\"using declare permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using declare</h2>\n<p>One thing you learn later in bash is to use certain builtin commands. Declare in bash is no exception. Here we cover how to use the builtin declare to modify the attributes of bash variables allowing you to create of arrays, list functions, integers, and much more.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> -c <span class=\"token string\">\"help declare\"</span>\ndeclare: <span class=\"token builtin class-name\">declare</span> <span class=\"token punctuation\">[</span>-aAfFgilnrtux<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-p<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">[</span><span class=\"token operator\">=</span>value<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n    Set variable values and attributes.\n\n    Declare variables and give them attributes.  If no NAMEs are given,\n    display the attributes and values of all variables.</code></pre></div>\n<p>Options:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Declare takes <span class=\"token punctuation\">[</span>-aAfFgilnrtux<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-p<span class=\"token punctuation\">]</span> as options. \n\n<span class=\"token punctuation\">[</span>-aAfFgilnrtux<span class=\"token punctuation\">]</span> affects attribute assignment.\n\n<span class=\"token punctuation\">[</span>-p<span class=\"token punctuation\">]</span> affects display of attributes</code></pre></div>\n<p>Options for functions:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  -f        restrict action or display to <span class=\"token keyword\">function</span> names and definitions\n\n  -F        restrict display to <span class=\"token keyword\">function</span> names only <span class=\"token punctuation\">(</span>plus line number and\n                <span class=\"token builtin class-name\">source</span> <span class=\"token function\">file</span> when debugging<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Option to list bash variable attributes:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  -p        display the attributes and value of each NAME</code></pre></div>\n<p>When you need to get variable attributes in bash <code class=\"language-text\">declare -p variable_name</code> comes in handy. The <code class=\"language-text\">-p</code> option can be used to exclude functions from output. Additionally, the effect of the -p option is canceled out when combined with either the <code class=\"language-text\">-f</code> option to include functions or the <code class=\"language-text\">-F</code> option to include only function names.</p>\n<p>Options which set attributes:</p>\n<p><span class=\"w3-codespan\">-<a href=\"declare.html#indexed_arrays\">a</a> to make NAMEs indexed arrays (if supported)</span></p>\n<p><span class=\"w3-codespan\">-<a href=\"declare.html#associative_arrays\">A</a> to make NAMEs associative arrays (if supported)</span></p>\n<p><span class=\"w3-codespan\">-<a href=\"declare.html#integers\">i</a> to make NAMEs have the 'integer' attribute</span></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  -g        create global variables when used in a shell function; otherwise\n            ignored\n\n  -l        to convert NAMEs to lower case on assignment\n\n  -n        make NAME a reference to the variable named by its value\n\n  -r        to make NAMEs readonly\n\n  -t        to make NAMEs have the `trace&#39; attribute\n\n  -u        to convert NAMEs to upper case on assignment\n\n  -x        to make NAMEs export</code></pre></div>\n<pre><code>Using `+' instead of `-' turns off the given attribute.\n\n    Variables with the integer attribute have arithmetic evaluation (see\n    the `let' command) performed when the variable is assigned a value.\n\n    When used in a function, `declare' makes NAMEs local, as with the `local'\n    command.  The `-g' option suppresses this behavior.\n\n    Exit Status:\n    Returns success unless an invalid option is supplied or a variable\n    assignment error occurs.\n</code></pre>\n<p>The <u>bash builtin</u> command <u>declare</u> provides access to variable attributes within the scope of a bash program. </p>\n<p>Here is a list of ways declare may be used. </p>\n<ul>\n<li>declare an arrays </li>\n<li><a data-scroll href=\"#namerefs\">declare namerefs</a></li>\n<li>dump variables</li>\n<li>test functions</li>\n<li>give variable attributes</li>\n<li>remove variable attributes</li>\n<li>list attributes</li>\n<li>make variable read-only</li>\n<li>make variable an integer</li>\n<li>make variable cast into lowercase on assignment</li>\n<li>make variable cast into uppercase on assignment</li>\n<li>make variable or function available in subshells</li>\n</ul>\n<h2 id=\"to-declare-an-array\" style=\"position:relative;\"><a href=\"#to-declare-an-array\" aria-label=\"to declare an array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare an array</h2>\n<p>declaring arrays in bash</p>\n<p><a name=\"indexed_arrays\"></a></p>\n<h3 id=\"indexed-arrays\" style=\"position:relative;\"><a href=\"#indexed-arrays\" aria-label=\"indexed arrays permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>indexed arrays</h3>\n<p><code class=\"w3-codespan\">declare -a</code> in bash</p>\n<p>The <code class=\"w3-codespan\">-a</code> option adds the indexed array attribute to the variable name provided to the declare command.</p>\n<h4 id=\"declare-indexed-array-variable\" style=\"position:relative;\"><a href=\"#declare-indexed-array-variable\" aria-label=\"declare indexed array variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>declare indexed array variable</h4>\n<pre><code>#\n# declare an array\n#\ndeclare -a VARIABLE \n</code></pre>\n<h4 id=\"set-indexed-array-key-value\" style=\"position:relative;\"><a href=\"#set-indexed-array-key-value\" aria-label=\"set indexed array key value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>set indexed array key value</h4>\n<p>Array key values may be set on initialization or afterwords. Indices inherit the integer attribute inside square brackets (\"<code class=\"w3-codespan\">[]</code>\"). Using <code class=\"w3-codespan\">declare -p</code> on an indexed array will list all array keys along with their corresponding assigned values.</p>\n<pre><code>#\n# declare an array and set key values\n#\ndeclare -a arr=(1) # arr[0]=1\narr[1]=$(( arr[0] + 1 ))\necho ${arr[0]} # 1\necho ${arr[1]} # 2\nfor i in {1..10}\ndo\n arr[i]=$(( arr[i-1] + arr[i-2] ))\ndone\necho ${arr[i]} # 199\ndeclare -p arr\n## expect\n#declare -a arr=([0]=\"1\" [1]=\"3\" [2]=\"4\" [3]=\"7\" [4]=\"11\" [5]=\"18\" [6]=\"29\" [7]=\"47\" [8]=\"76\" [9]=\"123\" [10]=\"199\")\n</code></pre>\n<p><a name=\"associative_arrays\"></a></p>\n<h3 id=\"associative-arrays-hashes-map-dictionary-or-collection-of-keyvalue-pairs\" style=\"position:relative;\"><a href=\"#associative-arrays-hashes-map-dictionary-or-collection-of-keyvalue-pairs\" aria-label=\"associative arrays hashes map dictionary or collection of keyvalue pairs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>associative arrays, hashes, map, dictionary, or collection of (key,value) pairs</h3>\n<p>Associative arrays hold key value pairs also called hashes. Unlike indexed arrays, their indices are not limited to integer values. That is, associative array keys may be any string. </p>\n<p><code class=\"w3-codespan\">declare -A</code> in bash</p>\n<p>The <code class=\"w3-codespan\">-A</code> option adds the associative array attribute to the variable name provided to the declare command. Note that declaring an associative array within a function will force local scope. To declare scope outside and use in a function omit the associative array declaration command line.</p>\n<h4 id=\"declare-associative-array\" style=\"position:relative;\"><a href=\"#declare-associative-array\" aria-label=\"declare associative array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>declare associative array</h4>\n<pre><code>#\n# declare an associative arrays\n#\ndeclare -A VARIABLE \n</code></pre>\n<h4 id=\"local-associative-array\" style=\"position:relative;\"><a href=\"#local-associative-array\" aria-label=\"local associative array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>local associative array</h4>\n<pre><code>foobar() { # foo w/ bar\n  echo -n ${FUNCNAME}:\n  ## note that local is not required in the case of declare -A\n  declare -A arr\n  arr[\"key\"]=value2\n  bar\n}\nrab() { # declares arr local\n  echo -n ${FUNCNAME}:\n  local arr\n  declare -p arr\n}\nbar() { # may inherit global arr\n  echo -n ${FUNCNAME}:\n  declare -p arr\n}\nfoo() { # declare arr local to function\n  echo -n ${FUNCNAME}:\n  ## note that local is not required in the case of declare -A\n  declare -A arr\n  arr[\"key\"]=value2\n  declare -p arr\n}\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\nfoo\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\n( declare -A arr ; arr[\"key\"]=value ; declare -p arr ; )\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\n{ declare -A arr ; arr[\"key\"]=value ; declare -p arr ; }\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\nfoo\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\n( declare -A arr ; arr[\"key\"]=value3 ; declare -p arr ; )\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\nbar\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\nrab\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\nfoobar\n{ echo -n : ; declare -p arr 2>/dev/null || echo no variable named arr 1>&2 ; }\n## expect\n#:no variable named arr\n#foo:declare -A arr=([key]=\"value2\" )\n#:no variable named arr\n#declare -A arr=([key]=\"value\" )\n#:no variable named arr\n#declare -A arr=([key]=\"value\" )\n#:declare -A arr=([key]=\"value\" )\n#foo:declare -A arr=([key]=\"value2\" )\n#:declare -A arr=([key]=\"value\" )\n#declare -A arr=([key]=\"value3\" )\n#:declare -A arr=([key]=\"value\" )\n#bar:declare -A arr=([key]=\"value\" )\n#:declare -A arr=([key]=\"value\" )\n#rab:declare -- arr\n#:declare -A arr=([key]=\"value\" )\n#foobar:bar:declare -A arr=([key]=\"value2\" )\n#:declare -A arr=([key]=\"value\" )\n</code></pre>\n<h4 id=\"associative-arrays-in-the-wild\" style=\"position:relative;\"><a href=\"#associative-arrays-in-the-wild\" aria-label=\"associative arrays in the wild permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>associative arrays in the wild</h4>\n<p>Associative array variable example using array to store document meta name value pairs</p>\n<pre><code>declare -A document\n...\nget-document-meta() {\n local document_meta\n local document_meta_name\n local document_meta_value\n document_meta=$(\n  cat ${file} \\\n  | grep \\\n  -e '<[!]--\\s\\+[a-z-]\\+:[a-z,]\\+\\s\\+-->' --only-matching \\\n  | sed -e 's/\\(.*\\)/\\1/' \\\n  -e 's/<!--\\s\\+//g' \\\n  -e 's/\\s\\+-->//g' \n )\n test ! \"${document_meta}\" || {\n  document_meta_name=$( \n   echo \"${document_meta}\" | cut -f1 -d:\n  )\n  document_meta_value=$(\n   echo \"${document_meta}\" | cut -f2 -d:\n  )\n  document[\"${document_meta_name}\"]=\"${document_meta_value}\" \n }\n}\n</code></pre>\n<p>source: <a href=\"https://github.com/temptemp3/sh2-u2-theme-default/blob/master/include.sh\">sh2-u2-theme-default/include.sh</a></p>\n<p><a id=\"namerefs\"></a></p>\n<h2 id=\"to-declare-a-variable-to-be-a-reference-to-another-variable\" style=\"position:relative;\"><a href=\"#to-declare-a-variable-to-be-a-reference-to-another-variable\" aria-label=\"to declare a variable to be a reference to another variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare a variable to be a reference to another variable</h2>\n<p><code class=\"w3-codespan\">declare -n</code> allows you to declare namerefs in bash. That is, we can use it to a name to be used reference another name.</p>\n<p>The <code class=\"w3-codespan\">-n</code> option adds the nameref attribute to the name provided to the declare command.</p>\n<p>Basic usage</p>\n<pre><code>#\n# declare nameref\n#\ndeclare -n VARIABLE \n</code></pre>\n<p>Nameref variable example</p>\n<p>Source</p>\n<pre><code>#!/bin/bash\n## test-declare-nameref\n## version 0.0.1 - initial\n##################################################\ntest-declare-nameref() {\n  declare -n X=x\n  declare -i x\n  echo setting x to 1 ...\n  x=1\n  echo x: ${x}\n  echo X: ${X}\n  echo incrementing x 9 times\n  _() { x+=1 ; }\n  for i in {1..9} ; do _ ; done\n  echo x: ${x}\n  echo X: ${X}\n  echo unsetting X ...\n  unset X\n  echo x: ${x}\n  echo X: ${X}\n}\n##################################################\nif [ ${#} -eq 0 ] \nthen\n true\nelse\n exit 1 # wrong args\nfi\n##################################################\ntest-declare-nameref\n##################################################\n## generated by create-stub2.sh v0.1.2\n## on Mon, 22 Jul 2019 20:31:35 +0900\n## see &lt;https://github.com/temptemp3/sh2&gt;\n##################################################\n</code></pre>\n<p>Commands</p>\n<pre><code>bash test-declare-nameref.sh\n</code></pre>\n<p>Ouput</p>\n<pre><code>setting x to 1 ...\nx: 1\nX: 1\nincrementing x 9 times\nx: 10\nX: 10\nunsetting X ...\nx:\nX:\n</code></pre>\n<h2 id=\"to-dump-variables\" style=\"position:relative;\"><a href=\"#to-dump-variables\" aria-label=\"to dump variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to dump variables</h2>\n<p>Using declare by itself may be used to dump variable names and functions along with their value and definitions, respectfully.</p>\n<p>Declare command example</p>\n<pre><code>declare\n</code></pre>\n<h2 id=\"to-test-a-function\" style=\"position:relative;\"><a href=\"#to-test-a-function\" aria-label=\"to test a function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to test a function</h2>\n<p>The declare command may be used to test if a function has been declared and is usable within the scope of the bash program.</p>\n<p>Function test examples</p>\n<pre><code>#\n# return name and definition of function if declared\n#\ndeclare -f ${function_name} \n</code></pre>\n<pre><code>#\n# returns name only of function if declared\n#\ndeclare -F ${function_name} \n</code></pre>\n<h2 id=\"to-give-a-variable-attributes\" style=\"position:relative;\"><a href=\"#to-give-a-variable-attributes\" aria-label=\"to give a variable attributes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to give a variable attributes</h2>\n<p>Attribute variable example</p>\n<pre><code>#\n# give variable attribute x\n#\ndeclare -X VARIABLE \n</code></pre>\n<h2 id=\"to-remove-variable-attributes\" style=\"position:relative;\"><a href=\"#to-remove-variable-attributes\" aria-label=\"to remove variable attributes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to remove variable attributes</h2>\n<p>Use '+' instead of '-'.</p>\n<p>Variable attribute removal example</p>\n<pre><code>#\n# remove attribute x from variable\n#\ndeclare +X VARIABLE \n</code></pre>\n<p>Attribute removal behavior may vary for array and readonly variables.</p>\n<h2 id=\"to-list-attributes\" style=\"position:relative;\"><a href=\"#to-list-attributes\" aria-label=\"to list attributes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to list attributes</h2>\n<p>List all variables in addition to their attributes.</p>\n<p><code class=\"w3-codespan\">declare -p</code> in bash</p>\n<p>Print variables and attributes in bash using the <code class=\"w3-codespan\">-p</code> option displays the attributes of the name provided to the declare command. Variables may include an assigned value.</p>\n<pre><code>declare -p \n</code></pre>\n<h2 id=\"to-declare-a-variable-without-attributes\" style=\"position:relative;\"><a href=\"#to-declare-a-variable-without-attributes\" aria-label=\"to declare a variable without attributes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare a variable without attributes</h2>\n<p><code class=\"w3-codespan\">declare</code> in bash without attributes</p>\n<p>The declare command may be used without specifying attributes resulting in an assignment.</p>\n<p>Declare variable example</p>\n<pre><code>#\n# declare variable without attribute\n#\ndeclare VARIABLE[=VALUE] \n</code></pre>\n<p>equvalent to</p>\n<pre><code>#\n# declare variable \n#\nVARIABLE=[VALUE] \n</code></pre>\n<h2 id=\"to-declare-a-readonly-variable\" style=\"position:relative;\"><a href=\"#to-declare-a-readonly-variable\" aria-label=\"to declare a readonly variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare a readonly variable</h2>\n<p><code class=\"w3-codespan\">declare -r</code> in bash</p>\n<p>Declare read-only variable in bash using the <code class=\"w3-codespan\">-r</code> option adds the read-only attribute to the variable name provided to the declare command such that the variable may not be reassigned.</p>\n<p>Read-only variable example</p>\n<pre><code>#\n# declare readonly\n#\ndeclare -r VARIABLE \n</code></pre>\n<p><a name=\"bash-declare-integer\"></a>\n<a name=\"integers\"></a></p>\n<h2 id=\"to-declare-a-variable-to-be-treated-as-an-integer\" style=\"position:relative;\"><a href=\"#to-declare-a-variable-to-be-treated-as-an-integer\" aria-label=\"to declare a variable to be treated as an integer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare a variable to be treated as an integer</h2>\n<p><code class=\"w3-codespan\">declare -i</code> in bash</p>\n<p>Declare integer variables in bash using the <code class=\"w3-codespan\">-i</code> option adds the integer attribute to the variable name provided to the declare command such that the variable is to treated as an integer.</p>\n<p>Integer variable example</p>\n<pre><code>#\n# declare integer\n#\ndeclare -i VARIABLE \n</code></pre>\n<p>See also</p>\n<ul>\n<li><a href=\"declare-integer.html\">bash declare integer</a></li>\n</ul>\n<h2 id=\"to-declare-a-variable-to-be-case-insensitive-or-lowercase\" style=\"position:relative;\"><a href=\"#to-declare-a-variable-to-be-case-insensitive-or-lowercase\" aria-label=\"to declare a variable to be case insensitive or lowercase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare a variable to be case-insensitive, or lowercase</h2>\n<p><code class=\"w3-codespan\">declare -l</code> in bash</p>\n<p>Declare lowercase variables in bash using the <code class=\"w3-codespan\">-l</code> option adds the lowercase attribute to the variable name provided to the declare command such that any value is converted to lowercase on assignment.</p>\n<p>Lower variable example</p>\n<pre><code>#\n# declare lower\n#\ndeclare -l VARIABLE \n</code></pre>\n<h2 id=\"to-declare-a-variable-to-be-uppercase\" style=\"position:relative;\"><a href=\"#to-declare-a-variable-to-be-uppercase\" aria-label=\"to declare a variable to be uppercase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to declare a variable to be uppercase</h2>\n<p><code class=\"w3-codespan\">declare -u</code> in bash</p>\n<p>Declare uppercase variables in bash using the <code class=\"w3-codespan\">-u</code> option adds the uppercase attribute to the variable name provided to the declare command such that any value is converted to uppercase on assignment.</p>\n<p>Upper variable example</p>\n<pre><code>#\n# declare upper\n#\ndeclare -u VARIABLE \n</code></pre>\n<h2 id=\"to-export-variables-or-functions-to-subshells\" style=\"position:relative;\"><a href=\"#to-export-variables-or-functions-to-subshells\" aria-label=\"to export variables or functions to subshells permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>to export variables or functions to subshells</h2>\n<p><code class=\"w3-codespan\">declare -x</code> in bash</p>\n<p>Export variables and functions in bash using the <code class=\"w3-codespan\">-x</code> option adds the export attribute to the variable or function name provided to the declare command.</p>\n<h3 id=\"export-variable-to-subshells\" style=\"position:relative;\"><a href=\"#export-variable-to-subshells\" aria-label=\"export variable to subshells permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export variable to subshells</h3>\n<p>Export variable example</p>\n<pre><code>#\n# declare export variable\n#\ndeclare -x VARIABLE \n</code></pre>\n<h3 id=\"export-function-to-subshells\" style=\"position:relative;\"><a href=\"#export-function-to-subshells\" aria-label=\"export function to subshells permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export function to subshells</h3>\n<p>Export function example</p>\n<pre><code>#\n# declare export function\n#\ndeclare -xf FUNCTION\n</code></pre>\n<hr>\n<h2 id=\"commands-similar-to-declare\" style=\"position:relative;\"><a href=\"#commands-similar-to-declare\" aria-label=\"commands similar to declare permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>commands similar to declare</h2>\n<p>In addition, to declare, the following commands allow modification of bash variable attributes.</p>\n<h3 id=\"local\" style=\"position:relative;\"><a href=\"#local\" aria-label=\"local permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>local</h3>\n<p>Same as declare but with local bindings for functions</p>\n<p>See <a href=\"local.html\">bash using local</a></p>\n<h3 id=\"typeset\" style=\"position:relative;\"><a href=\"#typeset\" aria-label=\"typeset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typeset</h3>\n<p>Synonym for declare. That can be used interchangeably. May be used for compatibility with ksh or other POSIX complaint shell; however, set of option available may differ.</p>\n<h3 id=\"unset\" style=\"position:relative;\"><a href=\"#unset\" aria-label=\"unset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>unset</h3>\n<p>Remove variable from list of declared variables. Does not apply to indexed and associative arrays. Can be used on functions. Some options similar to declare, local, and typeset.</p>\n<hr>\n<h2 id=\"questions\" style=\"position:relative;\"><a href=\"#questions\" aria-label=\"questions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>questions</h2>\n<p>Questions and answers regarding declare in bash.</p>\n<h3 id=\"why-declare\" style=\"position:relative;\"><a href=\"#why-declare\" aria-label=\"why declare permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>why declare?</h3>\n<p>Typing. Declare allows you to apply or take away attributes to variables in bash similar to how types or assigned in statically typed programming languages. For example, you may want to make it so a variable may not be reassigned a new value. This can be accomplished using the bash builtin command declare. </p>\n<h3 id=\"declare-or-typeset\" style=\"position:relative;\"><a href=\"#declare-or-typeset\" aria-label=\"declare or typeset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>declare or typeset?</h3>\n<p>Either is fine. However, I personally don't use typeset. Although it doesn't hurt to know what it is at least or in case you have to migrate to ksh for some reason.</p>\n<h3 id=\"do-i-need-declare-to-assign-a-value-to-a-variable\" style=\"position:relative;\"><a href=\"#do-i-need-declare-to-assign-a-value-to-a-variable\" aria-label=\"do i need declare to assign a value to a variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>do I need declare to assign a value to a variable?</h3>\n<p>No. For most cases, you do not need declare to assign values to a variable. However, there may be side effects of declaring variable attributes after assignment. In that case, it would be advantageous to declare attributes before or on assignment in a single statement assigning value to a variable. </p>\n<h3 id=\"why-would-i-declare-a-variable-without-value-in-bash\" style=\"position:relative;\"><a href=\"#why-would-i-declare-a-variable-without-value-in-bash\" aria-label=\"why would i declare a variable without value in bash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>why would I declare a variable without value in bash?</h3>\n<p>You may declare a variable without value to communicate that a variable may be modified from this point on or to unset a variable via assignment.</p>\n<p>It is not necessary to declare a variable for the purpose of initialization if no assignment was made prior to appearance in script.</p>\n<hr>","tableOfContents":"<ul>\n<li><a href=\"/bash-declare/#using-declare\">Using declare</a></li>\n<li><a href=\"/bash-declare/#to-declare-an-array\">to declare an array</a></li>\n<li><a href=\"/bash-declare/#to-declare-a-variable-to-be-a-reference-to-another-variable\">to declare a variable to be a reference to another variable</a></li>\n<li><a href=\"/bash-declare/#to-dump-variables\">to dump variables</a></li>\n<li><a href=\"/bash-declare/#to-test-a-function\">to test a function</a></li>\n<li><a href=\"/bash-declare/#to-give-a-variable-attributes\">to give a variable attributes</a></li>\n<li><a href=\"/bash-declare/#to-remove-variable-attributes\">to remove variable attributes</a></li>\n<li><a href=\"/bash-declare/#to-list-attributes\">to list attributes</a></li>\n<li><a href=\"/bash-declare/#to-declare-a-variable-without-attributes\">to declare a variable without attributes</a></li>\n<li><a href=\"/bash-declare/#to-declare-a-readonly-variable\">to declare a readonly variable</a></li>\n<li><a href=\"/bash-declare/#to-declare-a-variable-to-be-treated-as-an-integer\">to declare a variable to be treated as an integer</a></li>\n<li><a href=\"/bash-declare/#to-declare-a-variable-to-be-case-insensitive-or-lowercase\">to declare a variable to be case-insensitive, or lowercase</a></li>\n<li><a href=\"/bash-declare/#to-declare-a-variable-to-be-uppercase\">to declare a variable to be uppercase</a></li>\n<li><a href=\"/bash-declare/#to-export-variables-or-functions-to-subshells\">to export variables or functions to subshells</a></li>\n<li><a href=\"/bash-declare/#commands-similar-to-declare\">commands similar to declare</a></li>\n<li><a href=\"/bash-declare/#questions\">questions</a></li>\n</ul>","timeToRead":11,"excerpt":"Most programmers can get by without knowing about declare in bash. Good thing we aren't most programmers. The leverage you get out of using…","frontmatter":{"title":"Bash declare","cover":"https://unsplash.it/1152/300/?random?BirchintheRoses","date":"29/09/2029","category":"blog","tags":["bash","bash-builtins"]},"fields":{"slug":"/bash-declare","date":"2029-09-19T15:00:00.000Z"}}},"pageContext":{"slug":"/bash-declare","nexttitle":"Enable metrics collction for an auto scaling group","nextslug":"/enable-metrics-collction-for-an-auto-scaling-group","prevtitle":"Bash functions","prevslug":"/bash-functions"}},"staticQueryHashes":[]}